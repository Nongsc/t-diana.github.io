{"meta":{"title":"Nsc","subtitle":"天道酬勤","description":"不要懒,好好干好一件事就行","author":"侬仕超","url":"http://www.nscblog.top","root":"/"},"pages":[{"title":"about","date":"2020-04-29T15:50:29.000Z","updated":"2020-05-04T12:45:06.107Z","comments":true,"path":"about/index.html","permalink":"http://www.nscblog.top/about/index.html","excerpt":"","text":"关于我|About me 简单搭一个博客，记录自我生活的碎片。不希望在生命中没有什么可以记忆。 我名叫侬仕超，对世界不感兴趣，像一条咸鱼，没有特别的情况，不喜欢与人交流。也讨厌孤独，一个人，有时感觉时间就是静止的。在自我生命中追寻生命的意义。 喜欢看一些有意义的番剧，电影。对有意思的事情充满的好奇心。 喜欢计算机知识，目前学会了Java编程，会使用Mybatis+SpringBoot进行SM项目编程。 从呱呱落地到现在，我从来没有什么事做成功的，以前认为什么都不重要，感觉过的开心就好，一直没心没肺的过着舒适的生活。 即将步入社会的我，现在却感觉到了压力，啥也不会，现在只希望自己不能偷懒了。将近23年，吃过亏，偷过懒，现在才领悟到这简单的道理，脸上漏出的苦笑啊。 高中我很喜欢政治哲学，记得政治老师说过他学校的校训——天道酬勤。大家时间都一样，只有我清楚我今天时间去哪里了。"},{"title":"categories","date":"2020-05-03T14:06:36.000Z","updated":"2020-05-03T14:07:44.960Z","comments":true,"path":"categories/index.html","permalink":"http://www.nscblog.top/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2020-05-03T11:34:38.000Z","updated":"2020-05-03T14:08:02.760Z","comments":true,"path":"tags/index.html","permalink":"http://www.nscblog.top/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"hexo+GitHub博客搭建","slug":"hexo-GitHub博客搭建","date":"2020-05-01T08:52:43.000Z","updated":"2020-06-01T09:11:49.326Z","comments":true,"path":"2020/05/01/hexo-GitHub博客搭建/","link":"","permalink":"http://www.nscblog.top/2020/05/01/hexo-GitHub%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/","excerpt":"hexo+GitHub博客搭建 引言 我花了一些时间搭建属于自己的博客，曾经也弄过一些博客之类的，接触hexo之后，相对来说,hexo简单易用，灵活高效。 hexo+GitHub进行搭建相对自己购买服务器更为划算。花费的精力也比使用服务器要少很多。这样我们就可以更专注写博客。","text":"hexo+GitHub博客搭建 引言 我花了一些时间搭建属于自己的博客，曾经也弄过一些博客之类的，接触hexo之后，相对来说,hexo简单易用，灵活高效。 hexo+GitHub进行搭建相对自己购买服务器更为划算。花费的精力也比使用服务器要少很多。这样我们就可以更专注写博客。 环境搭建 首先我们要将博客托管于GitHub所以我们先安装Git，使用Git进行代码的上传于维护。 Git安装 从Git官网上下载你计算机系统所对应的Git安装包 无脑下一步，进行安装 安装完成之后Win+R 输入cmd回车 输入 1git --version 出现版本号，代表环境变量配置成功。没有配置成功的话 1234找到Git的安装路径将安装路径下的bin文件夹的路径添加到path变量中注意：bin文件夹存放是Git的一些二进制可执行命令。 Git的一些基本操作和使用，我推荐极客学院的Git教程，写的很清楚，跟着学基本使用不成问题。 node.js安装 从nodejs官网上下载你计算机系统所对应的nodejs安装包，我们直接使用长期支持办就行。不推荐使用最新版，否则在后续过程会出现百度都没有的问题。如： TypeError [ERR_INVALID_ARG_TYPE]: The “mode” argument must be integer. 无脑下一步，直接完事。 再次进入cmd 执行以下命令 12node -v #查看nodejs的版本npm -v #这我也不知道是啥，查看有没有相关工具 安装Git和nodejs之后，我们直接使用git bash来敲命令行 hexo安装 先创建一个空文件夹blog，用于存放hexo的环境与博客文章，在blog文件内进行右单击后选择git bash here 输入命令 1npm install -g hexo-cli 老规矩，使用hexo -v 查看是否安装成功，顺便查看版本号 接下来初始化hexo 1hexo init 初始化完成后会有以下文件结构： node_modules：依赖包 即hexo所需的环境依赖 public：生成的页面的存放位置 scaffolds：生成文章的一些模板 source：用来存放你的文章 themes：hexo主题样式 .gitignore：上传到git时所要忽略的东西 _config.yml：全局的配置文件 输入命令 12hexo g #生成博客视图资源hexo s #启动后台服务器 会有http://localhost:4000 在浏览器中输入：http://localhost:4000 进行测试查看 使用Ctrl+C将服务器关闭 创建GitHub个人仓库 首先创建一个GitHub账号，记得用户名 创建一个仓库（repository）仓库名是 用户名.github.io 如我的仓库名就是 t-diana.github.io 将SSH添加到GitHub 记录本台机器一些信息 1234#这里的yourname输入你的GitHub用户名git config --global user.name &quot;yourname&quot;#这里youremail输入你的GitHub的邮箱git config --global user.email &quot;youremail&quot; 生成SSH公钥 1ssh-keygen -t rsa -C \"youremail\" 可以在用户主目录里找到.ssh目录，里面有 id_rsa 和 id_rsa.pub 两个文件，这两个就是 SSH Key 的秘钥对，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。 GitHub添加SSH 登录GitHub 点击右上角头像，选择setting 选择SSH and GPG keys 点击 New SSH key 将id_rsa.pub里的内容全部复制到key中，取个title 点击Add SSH key 在git bash 中查看是否添加成功 1ssh -T git@github.com #直接复制，不用修改 将hexo部署到GitHub 对全局配置文件_config.yml(而不是themes下的 _config.yml)进行修改 12345deploy: type: git repo: https://github.com/YourgithubName/YourgithubName.github.io.git branch: master#YourgithubName 就是自己的GitHub用户名 然后需要先安装deploy-git，才能用命令将博客视图资源部署到GitHub上 1npm install hexo-deployer-git --save #安装deploy-git的命令 上传操作相关命令，每次写完文章后，执行相关的命令 123hexo clean #清除之前生成的博客视图资源hexo generate 或是 hexo g #生成静态文章hexo deploy 或是 hexo d #将资源上传到GitHub上 注意： 进行deploy时会需要输入username和password 至此，博客基本搭建完成。如果需要进行其他修改的话。 大家可以查看这篇博客，这位博主写得非常细致。","categories":[],"tags":[{"name":"学习","slug":"学习","permalink":"http://www.nscblog.top/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"错误记录","slug":"错误记录","permalink":"http://www.nscblog.top/tags/%E9%94%99%E8%AF%AF%E8%AE%B0%E5%BD%95/"}]},{"title":"学习方法论","slug":"学习方法论","date":"2020-05-01T08:26:36.000Z","updated":"2020-05-05T01:22:35.847Z","comments":true,"path":"2020/05/01/学习方法论/","link":"","permalink":"http://www.nscblog.top/2020/05/01/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E8%AE%BA/","excerpt":"关于学习 世界观： ​ 不学习就不会产生进步，将会愚昧无知，自甘堕落。学习就是体验痛苦，重复同样的事物，却没有任何意思。我不喜欢学习，也不喜欢学习的成果，我想要的永远没有得到过。我只是在获取在这个世界的生存方式。","text":"关于学习 世界观： ​ 不学习就不会产生进步，将会愚昧无知，自甘堕落。学习就是体验痛苦，重复同样的事物，却没有任何意思。我不喜欢学习，也不喜欢学习的成果，我想要的永远没有得到过。我只是在获取在这个世界的生存方式。 方法论： chapter1 拖延症 学习新事物的记忆区域与痛觉的区域再相同的地方（大脑），因而当你在学习新事物的，会加大堆脑部的压力。 要学会主动去做，天赋与才能的开始 (这是一种态度，也是很重要的思想) chapter2 记住学习的重要的东西，而不是重复学习 消耗时间回忆，不要持续学习新事物 ​ 大脑记忆新事物的重要性 弱势就是学习的需求 睡眠很重要，理由如下： ​ 可以缓解压力 ​ 将神经元上突触的毒素清除，创建更多的突触 将新事物的特点与旧事物进行连接 用于更好的学习新事物。 chapter3 即使有别人帮助你，还得靠自己 左脑(专注模式，逻辑模式)：记忆新事物，前提是注意力不被分散 右脑(散发模式)：大脑游走，表达事物。 学习最大的部分解决问题 chapter4 变得吃力，却同时变得更加容易 学习新事物 难点 找不到与之有关的联系 学习的表面:只知道名字和类别 学习的主要:最让你感觉到最真实的那部分。 方向:有大体方向，不要卡在细节 ​ 当细节过后，补全细节 chapter5 你还得做大量的研究 错误是学习的一部分 由创意的人存在的问题：太过相信直觉认为正确的事情。 上手不等同于掌握 这样只有表面印在了我的大脑中 要有练习的时间 学习一件事新事物，是在不同的事物之间来回，而不是同一事物间来回。这样可以存在空间复习出处理和学习事物。 过一段时间后，用练习和直觉来确实的学习事物。 chapter6 所有东西都与过程有关 拖延是正常的，学习新事物没有那么愉快。在学习新事物很难起手。 学习新事物的同时等同于在吃苦。 没有天赋与才能，天赋与才能的起点:I AM WILLING TO DO IT(我愿意去做)，通过天赋与才能获取到的事物只是附属品。","categories":[],"tags":[{"name":"方法论","slug":"方法论","permalink":"http://www.nscblog.top/tags/%E6%96%B9%E6%B3%95%E8%AE%BA/"},{"name":"学习","slug":"学习","permalink":"http://www.nscblog.top/tags/%E5%AD%A6%E4%B9%A0/"}]},{"title":"程序设计和C语言","slug":"程序设计和C语言","date":"2020-03-20T12:47:52.000Z","updated":"2020-06-01T12:54:52.213Z","comments":true,"path":"2020/03/20/程序设计和C语言/","link":"","permalink":"http://www.nscblog.top/2020/03/20/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%92%8CC%E8%AF%AD%E8%A8%80/","excerpt":"","text":"1.1 什么是计算机程序 程序: 一组计算机能识别和执行的指令 每条指令使计算机执行特定的操作,一个特定的指令序列(指令集合),用来完成一定的功能. 计算机的本质是程序的机器 1.2 什么是计算机语言 个人简单理解:人与计算机交互的工具 计算机与人都能识别的语言这就是计算机语言 计算机语言的发展阶段: 机器语言 计算机是基于二进制工作的 机器指令:计算机能够识别和接受的二进制代码. 机器语言:机器指令的集合. 缺点:不容易使用,难以修改程序代码 符号语言(汇编语言) 符号语言:英文数字表示一个指令 例如:ADD表示 加 由于计算机不能直接识别 执行符号语言,所以要通过汇编程序的软件将符号语言的指令转换为机器指令. 转换的过程称为”代真”或”汇编”,因而符号语言又叫汇编语言或符号汇编 优点: 相对于机器语言方便使用 缺点: 程序可移植性差,机器依赖性强,如:机器A的上的程序无法在机器B上使用 机器语言和汇编语言是完全依赖于具体机器特性的,是面向机器的语言,相对于其他语言来说更”贴近”计算机,背称为计算机低级语言. 高级语言 不依赖于具体机器,它与具体计算机距离较远. 世界第一个计算机高级语言 FORTRAN语言(20世纪50年代) 高级语言需要通过编译器程序软件转换为机器指令的程序 高级语言的一个语句一般对应多条机器指令 优点: 高级语言数据结构丰富 不依赖于具体机器,它与具体计算机距离较远.(可移植性强) 简单易学,容易推广 高级语言的出现是计算机发展史上”惊人的成就” 高级语言的发展阶段 非结构化语言 符合语法要求,没有严格规范要求 程序难以维护和难以阅读 早期的BASIC FORTRAN和ALGOL都属于非结构化语言 结构化语言 为了解决非结构化语言的缺点(程序难以维护和阅读),提出结构化程序设计方法 程序由良好的基本结构(顺序结构 分支结构 循环结构)构成 程序中的流程不得随意跳转 程序结构清晰,易于编写 阅读和维护 QBASIC FORTRAN77和C语言都是结构化语言 语言特点:支持结构化程序设计方法 缺点: ​ 在编写程序时需要制定具体每个过程的细节 —-&gt; 规模小的程序 还可以 规模较大的程序显得力不从心(面向过程编程) 面向对象语言 对象由数据以及对数据进行的操作构成的 用于处理规模较大的程序 1.3 C语言的发展及其特点 C语言是国际广泛流行的计算机高级语言。 c语言的祖先是BCPL语言 c语言的设计最初是为了Unix提供一种工作语言 C语言的特点: 1.语言简洁 紧凑,使用方便灵活 2.运算符丰富 3.数据类型丰富 4.具有结构化的控制语句 5.语法灵活,程序设计自由度大 6.C语言允许直接访问物理地址 7.C语言程序可移植性好 8.代码质量高,程序执行效率高 C语言原来是专门为系统软件而设计的 1.4 最简单的C语言程序 1.4.1 最简单的C语言程举例 12345678910111213141516171819202122#include&lt;stdio.h&gt;void main()&#123; int max(int x, int y);//调用max函数的声明 int a,b,c;//声明变量a b c /* &amp;: 地址符 &amp;a:a变量的地址 */ scanf(\"%d,%d\",&amp;a,&amp;b);//scanf是一个输入函数 输入a和b的值 c = max(a,b);//调用max函数 将得到的值复制给C printf(\"max=%d\\n\",c);//输出C的值 &#125;int max(int x, int y)&#123; if(x&gt;y)&#123; return(x); &#125;else&#123; return(y); &#125;&#125; 1.4.2 c语言程序的结构 c语言程序的结构: 1.一个程序由一个或多个源程序文件组成。 1234567891011- 规模较小的程序，往往只包括一个源程序文件(一个源文件中只有一个main函数)。一个源程序文件中可以包括3个部分: 1. 预处理指令 如:#include&lt;stdio.h&gt; #define C编译系统在对源程序进行\"翻译\"(转换为二进制)以前, 先由一个\"预处理器\"对指令进行预处理:将头文件的内容读取,放在#include后面 编译程序对源程序进行编译得到目标程序（机器指令） 2. 全局声明(在函数之外进行的数据声明) 相当于Java中成员属性 作用范围:整个源程序文件 3. 函数定义 每个函数用来实现一定的功能。调用这些函数时，会完成函数定义中指定的功能。 2.函数是C程序的主要组成部分 123456789函数是C程序的基本单位，在设计良好的程序中，每个函数都用来实现一个或几个特地当的功能。编写C程序的主要工作就是编写一个个函数。C程序有且仅有一个main函数，有一个或多个函数组成当程序规模较大时，为了方便编译 调试和管理，一个程序可以包括若干个源程序文件 一个源程序文件就是一个程序模块编译时，对个源文件程序进行编译得到相应的目标程序，将目标程序连接成为一个统一的二进制可执行程序程序中调用的函数可以是自定函数，可以是库函数 3.一个函数包括两个部分 int max (int x) {} ​ 函数首部 int max (int x) 函数类型 函数名 函数参数类型 函数参数名 ​ 函数体:{}(离函数首部最近的) ​ 声明部分: ​ 在调用函数中定义变量 ​ 对被调用函数进行声明 ​ 执行部分: ​ {}中的语句,指定在函数中进行的操作 也可以什么都不做即一个空函数 4.程序总是从main函数开始执行的 5.程序中对计算机的操作是由函数中的C语句完成的。 6.在每个数据声明语句的最后必须有一个分号 7.C语言本身不提供输入输出语句 ​ 输入输出的操作是由库函数来完成的 8.程序应当包含注释 ​ 增加必要的注释，提高程序的可读性。 1.5 运行C程序的步骤与方法 1.上级输入和编辑源程序 2.对源程序进行编译 1234561.先对程序中的预处理指令进行编译预处理2.在对完整的源程序进行编译编译的作用：首先是检查源程序中是否有语法错误没有语法错误之后，再编译时，自动包括了预编译和正式编译连个阶段，用户不用发出两次指令 3.进行连接处理 编译后得到的目标模块连接装配起来,再与函数库连接成一个整体,生成一个课供计算机执行的目标程序,称为 可执行程序 连接工作由”连接编辑程序”的软件来实现 4.运行可执行程序 1.6 程序设计的任务 程序设计是指从确定任务到得到结果,写出文档的全过程 一般经历以下几个工作阶段: 1.问题分析 ​ 研究给定条件 分析最终目标,找出解题规律,选择合适的解题方法 2.设计算法 ​ 设计出解题的方法和具体步骤 3.编写程序 ​ 根据得出的算法,用高级语言编写出源程序 4.对源程序进行编辑 编译和连接,得到执行程序 5.运行程序,分析结果 ​ 对程序进行调试,发现和排除程序中故障的工程 ​ 测试:设计多组测试数据,检查不同数据的运行情况,尽量找出程序中存在的漏洞,并修改程序,使程序能够适应各种情况. 6.编写程序文档 提供程序说明书内容应该包括 程序名称 程序功能 运行环境 程序安装和启动,需要输入的数据,以及使用注意事项 软件是计算机程序和程序文档的总称","categories":[],"tags":[{"name":"学习","slug":"学习","permalink":"http://www.nscblog.top/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"专升本","slug":"专升本","permalink":"http://www.nscblog.top/tags/%E4%B8%93%E5%8D%87%E6%9C%AC/"},{"name":"C语言","slug":"C语言","permalink":"http://www.nscblog.top/tags/C%E8%AF%AD%E8%A8%80/"}]}],"categories":[],"tags":[{"name":"学习","slug":"学习","permalink":"http://www.nscblog.top/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"错误记录","slug":"错误记录","permalink":"http://www.nscblog.top/tags/%E9%94%99%E8%AF%AF%E8%AE%B0%E5%BD%95/"},{"name":"方法论","slug":"方法论","permalink":"http://www.nscblog.top/tags/%E6%96%B9%E6%B3%95%E8%AE%BA/"},{"name":"专升本","slug":"专升本","permalink":"http://www.nscblog.top/tags/%E4%B8%93%E5%8D%87%E6%9C%AC/"},{"name":"C语言","slug":"C语言","permalink":"http://www.nscblog.top/tags/C%E8%AF%AD%E8%A8%80/"}]}